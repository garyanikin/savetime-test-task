{"version":3,"sources":["App.js","actions.js","index.js"],"names":["App","dispatch","useDispatch","useState","input","setInput","useSelector","results","fetchedInput","isFetching","debouncedFetch","useCallback","cb","delay","time","args","arguments","clearTimeout","setTimeout","_debounce","type","payload","fetchStart","fetch","then","response","json","data","filter","title","indexOf","slice","fetchSuccess","fetchAPI","useEffect","className","value","onChange","event","target","placeholder","onClick","length","map","item","key","dangerouslySetInnerHTML","__html","split","join","store","createStore","state","action","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAkFeA,MA7Ef,WACE,IAAMC,EAAWC,cADJ,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGiCC,aAC5C,kBAAqC,CACnCC,QADF,EAAGA,QAEDC,aAFF,EAAYJ,MAGVK,WAHF,EAAmBA,eADbD,EAHK,EAGLA,aAAcD,EAHT,EAGSA,QAASE,EAHlB,EAGkBA,WAOzBC,EAAiBC,sBAyDzB,SAAmBC,EAAIC,GACrB,IAAIC,EACJ,OAAO,WACL,IAAMC,EAAOC,UAEbC,aAAaH,GACbA,EAAOI,YAAW,kBAAMN,EAAE,WAAF,cAAMG,MAAOF,IA9DrCM,EAAU,SAACf,GAAD,OAAWH,ECGlB,SAAkBG,GACvB,OAAO,SAAUH,GAIf,OAHAA,EAjBJ,SAAoBG,GAClB,MAAO,CACLgB,KAJuB,cAKvBC,QAASjB,GAcAkB,CAAWlB,IAGbmB,IAAM,+CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,IAAMpB,EAAUoB,EACbC,QAAO,mBAAyC,IAAzC,EAAGC,MAAkBC,QAAQ1B,MACpC2B,MAAM,EAAG,GAEZ9B,EArBR,SAAsBM,GACpB,MAAO,CACLa,KAVyB,gBAWzBC,QAASd,GAkBIyB,CAAazB,QDhBI0B,CAAS7B,MAAS,KAChD,IASF,OANA8B,qBAAU,WACM,KAAV9B,GAEJM,EAAeN,KACd,CAACH,EAAUG,IAGZ,yBAAK+B,UAAU,OACb,yBAAKA,UAAU,gBACb,2BACEC,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAWjC,EAASiC,EAAMC,OAAOH,QAC3CI,YAAY,+FACZpB,KAAK,SAEP,yBAAKe,UAAU,sBACb,2DAGD/B,GACC,yBAAK+B,UAAU,sBAAsBM,QAAS,kBAAMpC,EAAS,MAC3D,8EAIN,yBACE8B,UAAS,kBACP/B,GAASG,EAAQmC,SAAWjC,EAAa,iBAAmB,KAG7DL,EACGG,EAAQoC,KAAI,SAACC,EAAMC,GAEjB,OACE,yBACEA,IAAKA,EACLV,UAAU,SACVW,wBAAyB,CACvBC,OAAQH,EAAKf,MACVmB,MAAMxC,GACNyC,KAFK,kBAEWzC,EAFX,oBAOhB,Q,eE5CN0C,EAAQC,aAbE,SAACC,EAAOC,GACtB,MDPyB,gBCOrBA,EAAOjC,KACF,eAAKgC,EAAZ,CAAmBhD,MAAOiD,EAAOhC,QAASZ,YAAY,IDP7B,kBCWvB4C,EAAOjC,KACF,eAAKgC,EAAZ,CAAmB7C,QAAS8C,EAAOhC,QAASZ,YAAY,IAGnD2C,IAKP,CAAEhD,MAAO,GAAIG,QAAS,GAAIE,YAAY,GACtC6C,YAAgBC,MAGlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.ef66b9c4.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAPI } from \"./actions\";\nimport \"./App.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState(\"\");\n  const { fetchedInput, results, isFetching } = useSelector(\n    ({ results, input, isFetching }) => ({\n      results,\n      fetchedInput: input,\n      isFetching,\n    })\n  );\n  const debouncedFetch = useCallback(\n    _debounce((input) => dispatch(fetchAPI(input)), 200),\n    []\n  );\n\n  useEffect(() => {\n    if (input === \"\") return;\n    //При пользовательском вводе ограничиваем количество запросов к API c помощью _debounce\n    debouncedFetch(input);\n  }, [dispatch, input]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"search-input\">\n        <input\n          value={input}\n          onChange={(event) => setInput(event.target.value)}\n          placeholder=\"Поиск по магазину\"\n          type=\"text\"\n        />\n        <div className=\"search-input__icon\">\n          <span>лупа</span>\n        </div>\n        {/* Если есть input показываем кнопку для очистки input'a */}\n        {input && (\n          <div className=\"search-input__close\" onClick={() => setInput(\"\")}>\n            <span>крестик</span>\n          </div>\n        )}\n      </div>\n      <div\n        className={`results ${\n          input && results.length && !isFetching ? \"results_showed\" : \"\"\n        }`}\n      >\n        {input\n          ? results.map((item, key) => {\n              // Подсвечиваем ввод пользователя в найденых результатах\n              return (\n                <div\n                  key={key}\n                  className=\"result\"\n                  dangerouslySetInnerHTML={{\n                    __html: item.title\n                      .split(fetchedInput)\n                      .join(`<strong>${fetchedInput}</strong>`),\n                  }}\n                />\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n}\n\n// Функция для дебаунса\nfunction _debounce(cb, delay) {\n  let time;\n  return function () {\n    const args = arguments;\n\n    clearTimeout(time);\n    time = setTimeout(() => cb(...args), delay);\n  };\n}\n\nexport default App;\n","import fetch from \"cross-fetch\";\n\nexport const FETCH_START = \"FETCH_START\";\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nfunction fetchStart(input) {\n  return {\n    type: FETCH_START,\n    payload: input,\n  };\n}\n\nfunction fetchSuccess(results) {\n  return {\n    type: FETCH_SUCCESS,\n    payload: results,\n  };\n}\n\n// Асинхронный actions для запроса к API\nexport function fetchAPI(input) {\n  return function (dispatch) {\n    dispatch(fetchStart(input));\n\n    // Делаем запрос к API\n    return fetch(`https://jsonplaceholder.typicode.com/albums`)\n      .then((response) => response.json())\n      .then((data) => {\n        // Оставляем только результаты содержащие input\n        const results = data\n          .filter(({ title }) => title.indexOf(input) !== -1)\n          .slice(0, 5);\n        // Отправляем в store результаты запроса к API\n        dispatch(fetchSuccess(results));\n      });\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { FETCH_START, FETCH_SUCCESS } from \"./actions\";\n\nconst reducer = (state, action) => {\n  if (action.type === FETCH_START) {\n    return { ...state, input: action.payload, isFetching: true };\n  }\n\n  // Сохраняем в store ответ от API\n  if (action.type === FETCH_SUCCESS) {\n    return { ...state, results: action.payload, isFetching: false };\n  }\n\n  return state;\n};\n\nconst store = createStore(\n  reducer,\n  { input: \"\", results: [], isFetching: false },\n  applyMiddleware(thunkMiddleware)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}